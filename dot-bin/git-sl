#!/bin/bash -e
#
# Inspired from 'forgit' (https://github.com/wfxr/forgit), and
# https://levelup.gitconnected.com/search-git-branches-and-commits-using-fzf-33df960fcc9c
# 
# Funtions:
# 1. Show git log history and fuzzy search git commits
# 2. 'enter' to view the commit
# 3. 'ctrl-o' to checkout the selected commit
# 4. 'ctrl-y' to yank/copy commit's short-hash value
# -- Louis 2024/0423

# Define color codes
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[0;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

_COLS=$(tput col)

if git rev-parse --git-dir > /dev/null 2>&1; then

  # TODO
  # Combine this if-else statement by using varialbes to replace fzf parameters:
  # 1. "--tmux" or not
  # 2. value of '--preview="
  # It seems simply using variables doesn't work
  if [ "${_COLS}" -ge 160 ]; then
    # Popup tmux window and delta side by side
    commit=$(git log --graph --color=always \
      --format="%C(auto)%h%d %s %C(black)%C()%cr" | \
      fzf --tmux=center,80%,90% \
        --ansi --no-sort \
        --no-multi \
        --cycle \
        --print0 \
        --header "Enter to view, C-y to copy the hash, C-o to checkout" \
        --preview-window=down,70% \
        --preview='f() { set -- $(echo -- "${@}" | grep -o "[a-f0-9]\{7\}"); [ $# -eq 0 ] || git show --color=always "$1" | delta --side-by-side -w ${FZF_PREVIEW_COLUMNS:-$COLUMNS}; }; f {}' \
        --bind "ctrl-y:execute-silent( echo -n {} | \grep -o '[a-f0-9]\{7\}' | tr -d '\n' | pbcopy)" \
        --bind "ctrl-h:preview-page-down,ctrl-l:preview-page-up" \
        --bind "ctrl-f:page-down,ctrl-b:page-up" \
        --expect="ctrl-o")
  else
    commit=$(git log --graph --color=always \
      --format="%C(auto)%h%d %s %C(black)%C()%cr" | \
      fzf \
        --ansi --no-sort \
        --no-multi \
        --cycle \
        --print0 \
        --header "Enter to view, C-y to copy the hash, C-o to checkout" \
        --preview-window=down,70% \
        --preview='f() { set -- $(echo -- "${@}" | grep -o "[a-f0-9]\{7\}"); [ $# -eq 0 ] || git show --color=always "$1" | delta; }; f {}' \
        --bind "ctrl-y:execute-silent( echo -n {} | \grep -o '[a-f0-9]\{7\}' | tr -d '\n' | pbcopy)" \
        --bind "ctrl-h:preview-page-down,ctrl-l:preview-page-up" \
        --bind "ctrl-f:page-down,ctrl-b:page-up" \
        --expect="ctrl-o")
  fi

  commitHash=$(set -- $(echo -- "${commit}" | grep -o "[a-f0-9]\{7\}"); [ $# -eq 0 ] || echo "$1" ; )
  #echo "\$commit: ${commit}"
  #echo "\$commitHash: ${commitHash}"

  if [ ! -z "${commitHash}" ]; then

    if [[ ${commit} =~ "ctrl-o" ]]; then # Ctrl-o is hit
      git checkout "${commitHash}"
    else # Enter is hit
      git show --color=always "${commitHash}"
    fi

  fi

else
  echo -e "This is${RED} NOT${NC} a git repository"
fi
